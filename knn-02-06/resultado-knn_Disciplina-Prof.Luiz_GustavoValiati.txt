TESTE 1
------------
Comando: python knn.py --train /home/gustavo/workspace/ci724/knn-dataset/150k/CCtrain --test /home/gustavo/workspace/ci724/knn-dataset/150k/CCtest1 -k 3 --limit-test 10000 --limit-train 10000                                                                                            

Output:

Reading file:  /home/gustavo/workspace/ci724/knn-dataset/150k/CCtrain
Lines 150000 | Features 132
We are limiting to 10000 training sets.
Reading file:  /home/gustavo/workspace/ci724/knn-dataset/150k/CCtest1
Lines 60089 | Features 132
We are limiting to 10000 testing sets.

 FINISHED. Final summary: 

Calculation time: 0:16:27
Tested 10000 | Error: 406 | Rejection 48 | Correct 95.9204180064 %
[[1018    2    0    3    4    0    7    0    1    1]
 [   0  991   23    3    0    0    5    2    6    5]
 [   0    1  975    7    0    0    1    4    2    0]
 [   1    2   11  941    0    6    0   18    4   11]
 [   2    0    3    0  933    0   11    1    4   19]
 [   1    1    0   19    2  895    3    1    7   12]
 [   2    3    0    0    1    3  970    0    1    0]
 [   0    0    1    4    4    0    0  986    5   30]
 [  33   20    0    3    3   12    3    0  896    7]
 [   1    0    0   19    2    0    0   33    0  941]]


---//---


TESTE 2
------------

python knn.py --train /home/gustavo/workspace/ci724/knn-dataset/150k/CCtrain --test /home/gustavo/workspace/ci724/knn-dataset/150k/CCtest2 -k 3 --limit-test 10000 --limit-train 10000                                                                                            

Output:

Reading file:  /home/gustavo/workspace/ci724/knn-dataset/150k/CCtrain
Lines 150000 | Features 132
We are limiting to 10000 training sets.
Reading file:  /home/gustavo/workspace/ci724/knn-dataset/150k/CCtest2
Lines 58646 | Features 132
We are limiting to 10000 testing sets.

 FINISHED. Final summary: 

Calculation time: 0:17:03
Tested 10000 | Error: 717 | Rejection 100 | Correct 92.7575757576 %
[[1025    0    0    4    0    1    5    0    5    1]
 [   0  895   28   20    2    0   24   20   14   15]
 [   3    1  947   30    0    0    2    8    5    0]
 [   0    0    4  937    2   14    0   17    4    8]
 [   2    2    3    1  897    0   35    2    2   22]
 [   0    0    1   39    1  863   11    7    9   10]
 [   5    0    1    0    2    4  974    0    9    0]
 [   1    1    6   22   16    2    0  904    3   67]
 [  15    1    6    6    2    6    9    1  887   23]
 [   5    0    4   54   23    2    1   30    6  854]]
